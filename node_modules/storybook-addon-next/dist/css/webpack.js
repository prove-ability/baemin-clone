"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureCss = void 0;
const getCssModuleLocalIdent_1 = require("next/dist/build/webpack/config/blocks/css/loaders/getCssModuleLocalIdent");
const configureCss = (baseConfig, nextConfig) => {
    var _a, _b, _c;
    const rules = (_a = baseConfig.module) === null || _a === void 0 ? void 0 : _a.rules;
    rules === null || rules === void 0 ? void 0 : rules.forEach((rule, i) => {
        if (typeof rule !== 'string' &&
            rule.test instanceof RegExp &&
            rule.test.test('test.css')) {
            rules[i] = {
                test: /\.css$/,
                use: [
                    'style-loader',
                    {
                        loader: 'css-loader',
                        options: {
                            modules: { auto: true, getLocalIdent: getCssModuleLocalIdent_1.getCssModuleLocalIdent }
                        }
                    },
                    'postcss-loader'
                ]
            };
        }
    });
    rules === null || rules === void 0 ? void 0 : rules.push({
        test: /\.(scss|sass)$/,
        use: [
            'style-loader',
            {
                loader: 'css-loader',
                options: {
                    modules: { auto: true, getLocalIdent: getCssModuleLocalIdent_1.getCssModuleLocalIdent }
                }
            },
            'postcss-loader',
            'resolve-url-loader',
            {
                loader: 'sass-loader',
                options: {
                    sassOptions: nextConfig.sassOptions,
                    additionalData: ((_b = nextConfig.sassOptions) === null || _b === void 0 ? void 0 : _b.prependData) ||
                        ((_c = nextConfig.sassOptions) === null || _c === void 0 ? void 0 : _c.additionalData)
                }
            }
        ]
    });
};
exports.configureCss = configureCss;
