{"version":3,"file":"main.138e9e582ba53fc72a68.hot-update.js","sources":["webpack:///./components/common/modal/modal.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\n\\nimport Modal from \\\".\\\";\\n\\nexport default {\\n\\t/* 👇 The title prop is optional.\\n\\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n\\t * to learn how to generate automatic titles\\n\\t */\\n\\ttitle: \\\"Components/Modal\\\",\\n\\tcomponent: Modal,\\n} as ComponentMeta<typeof Modal>;\\n\\n//👇 We create a “template” of how args map to rendering\\nconst Template = (args) => <Button {...args} />;\\n\\nexport const FULL: ComponentStory<typeof Modal> = () => (\\n\\t<Modal\\n\\t\\tshow={true}\\n\\t\\tonClose={function (): void {\\n\\t\\t\\tthrow new Error(\\\"Function not implemented.\\\");\\n\\t\\t}}\\n\\t\\ttitle={\\\"FULL 모달입니다\\\"}\\n\\t\\tsize=\\\"full\\\"\\n\\t>\\n\\t\\tTEST\\n\\t</Modal>\\n);\\n\\nexport const Default: ComponentStory<typeof Modal> = () => (\\n\\t<Modal\\n\\t\\tshow={true}\\n\\t\\tonClose={function (): void {\\n\\t\\t\\tthrow new Error(\\\"Function not implemented.\\\");\\n\\t\\t}}\\n\\t\\ttitle=\\\"MINI 모달입니다\\\"\\n\\t\\tsize=\\\"mini\\\"\\n\\t>\\n\\t\\tTEST\\n\\t</Modal>\\n);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"FULL\":{\"startLoc\":{\"col\":50,\"line\":17},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":50,\"line\":17},\"endBody\":{\"col\":1,\"line\":28}},\"Default\":{\"startLoc\":{\"col\":53,\"line\":30},\"endLoc\":{\"col\":1,\"line\":41},\"startBody\":{\"col\":53,\"line\":30},\"endBody\":{\"col\":1,\"line\":41}}};\n    \nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\n\nimport Modal from \".\";\n\nexport default {\n\t/* 👇 The title prop is optional.\n\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n\t * to learn how to generate automatic titles\n\t */\n\ttitle: \"Components/Modal\",\n\tcomponent: Modal,\n} as ComponentMeta<typeof Modal>;\n\n//👇 We create a “template” of how args map to rendering\nconst Template = (args) => <Button {...args} />;\n\nexport const FULL: ComponentStory<typeof Modal> = () => (\n\t<Modal\n\t\tshow={true}\n\t\tonClose={function (): void {\n\t\t\tthrow new Error(\"Function not implemented.\");\n\t\t}}\n\t\ttitle={\"FULL 모달입니다\"}\n\t\tsize=\"full\"\n\t>\n\t\tTEST\n\t</Modal>\n);;\n\nexport const Default: ComponentStory<typeof Modal> = () => (\n\t<Modal\n\t\tshow={true}\n\t\tonClose={function (): void {\n\t\t\tthrow new Error(\"Function not implemented.\");\n\t\t}}\n\t\ttitle=\"MINI 모달입니다\"\n\t\tsize=\"mini\"\n\t>\n\t\tTEST\n\t</Modal>\n);\n\n\n\nFULL.parameters = { storySource: { source: \"() => (\\n\\t<Modal\\n\\t\\tshow={true}\\n\\t\\tonClose={function (): void {\\n\\t\\t\\tthrow new Error(\\\"Function not implemented.\\\");\\n\\t\\t}}\\n\\t\\ttitle={\\\"FULL 모달입니다\\\"}\\n\\t\\tsize=\\\"full\\\"\\n\\t>\\n\\t\\tTEST\\n\\t</Modal>\\n)\" }, ...FULL.parameters };\nDefault.parameters = { storySource: { source: \"() => (\\n\\t<Modal\\n\\t\\tshow={true}\\n\\t\\tonClose={function (): void {\\n\\t\\t\\tthrow new Error(\\\"Function not implemented.\\\");\\n\\t\\t}}\\n\\t\\ttitle=\\\"MINI 모달입니다\\\"\\n\\t\\tsize=\\\"mini\\\"\\n\\t>\\n\\t\\tTEST\\n\\t</Modal>\\n)\" }, ...Default.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AADA;AAAA;AAWA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AADA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}