{"version":3,"file":"main.242954ed46f28c02adca.hot-update.js","sources":["webpack:///./components/common/button/button.stories.tsx","webpack:///./components/common/button/index.tsx","webpack:///./components/common/modal/index.tsx","webpack:///./components/common/modal/modal.css.ts","webpack:///./components/common/modal/modal.stories.tsx","webpack:///./styles/theme.css.ts"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\n\\nimport Button from \\\".\\\";\\n\\nexport default {\\n\\t/* üëá The title prop is optional.\\n\\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n\\t * to learn how to generate automatic titles\\n\\t */\\n\\ttitle: \\\"Components/Button\\\",\\n\\tcomponent: Button,\\n} as ComponentMeta<typeof Button>;\\n\\nexport const Default: ComponentStory<typeof Button> = () => (\\n\\t<Button>Button</Button>\\n);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":54,\"line\":14},\"endLoc\":{\"col\":1,\"line\":16},\"startBody\":{\"col\":54,\"line\":14},\"endBody\":{\"col\":1,\"line\":16}}};\n    \nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\n\nimport Button from \".\";\n\nexport default {\n\t/* üëá The title prop is optional.\n\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n\t * to learn how to generate automatic titles\n\t */\n\ttitle: \"Components/Button\",\n\tcomponent: Button,\n} as ComponentMeta<typeof Button>;\n\nexport const Default: ComponentStory<typeof Button> = () => (\n\t<Button>Button</Button>\n);\n\n\n\nDefault.parameters = { storySource: { source: \"() => (\\n\\t<Button>Button</Button>\\n)\" }, ...Default.parameters };","import { ButtonHTMLAttributes } from \"react\";\n// import { buttonRecipe } from \"styles/components/button.css\";\n\ninterface Props\n\textends Pick<ButtonHTMLAttributes<HTMLButtonElement>, \"type\" | \"onClick\"> {\n\trecipe?: \"default\";\n}\n\nconst Button: React.FC<Props> = ({ children, type = \"button\", ...rest }) => {\n\treturn (\n\t\t<button type={type} {...rest}>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import * as styles from \"./modal.css\";\nimport { useEffect } from \"react\";\n\ninterface Props {\n\tshow: boolean;\n\tonClose: () => void;\n\ttitle: string;\n\tsize: \"full\" | \"mini\";\n}\n\nconst Modal: React.FC<Props> = ({\n\tshow,\n\tonClose,\n\tchildren,\n\ttitle,\n\tsize = \"full\",\n}) => {\n\tconst handleCloseClick = (e: React.MouseEvent<HTMLSpanElement>) => {\n\t\te.preventDefault();\n\t\tonClose();\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.body.style.overflow = \"hidden\";\n\t\treturn () => {\n\t\t\tdocument.body.style.overflow = \"unset\";\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className={styles.container({ show })}>\n\t\t\t<div className={styles.wrapper({ size })}>\n\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t<span>{title}</span>\n\t\t\t\t\t<span onClick={handleCloseClick}>x</span>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.body}>{children}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Modal;\n","import { style } from \"@vanilla-extract/css\";\nimport { recipe } from \"@vanilla-extract/recipes\";\nimport { sprinkles } from \"styles/theme.css\";\n\n// container\nconst containerStyle = style([\n\tsprinkles({\n\t\tzIndex: \"9999\",\n\t\tbackground: \"dimmed\",\n\t}),\n\t{\n\t\tposition: \"fixed\",\n\t\ttop: \"0\",\n\t\tleft: \"0\",\n\t\tbottom: \"0\",\n\t\twidth: \"100%\",\n\t\ttransition: \"transform 1.5s ease\",\n\t},\n]);\n\nexport const container = recipe({\n\tbase: containerStyle,\n\tvariants: {\n\t\tshow: {\n\t\t\ttrue: {\n\t\t\t\ttransform: \"translateY(0)\",\n\t\t\t\tvisibility: \"visible\",\n\t\t\t\theight: \"100%\",\n\t\t\t},\n\t\t\tfalse: {\n\t\t\t\ttransform: \"translateY(110%)\",\n\t\t\t\tvisibility: \"hidden\",\n\t\t\t},\n\t\t},\n\t},\n\tdefaultVariants: { show: false },\n});\n\n// wrapper\nconst wrapperStyle = style([\n\tsprinkles({\n\t\tbackground: \"light\",\n\t\tpadding: \"medium\",\n\t}),\n\t{\n\t\tposition: \"absolute\",\n\t\tleft: \"50%\",\n\t\ttop: \"50%\",\n\t\ttransform: \"translate(-50%, -50%)\",\n\t\twidth: \"100%\",\n\t\tmaxWidth: \"769px\",\n\t\theight: \"100%\",\n\t},\n]);\n\nexport const wrapper = recipe({\n\tbase: wrapperStyle,\n\tvariants: {\n\t\tsize: {\n\t\t\tfull: {},\n\t\t\tmini: {\n\t\t\t\twidth: \"auto\",\n\t\t\t\theight: \"auto\",\n\t\t\t},\n\t\t},\n\t},\n\tdefaultVariants: { size: \"full\" },\n});\n\n// header\nexport const header = style([\n\tsprinkles({\n\t\tdisplay: \"flex\",\n\t\tplaceItems: \"center\",\n\t}),\n]);\n\n// body\nexport const body = style([sprinkles({ paddingTop: \"medium\" })]);\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\n\\nimport Modal from \\\".\\\";\\n\\nexport default {\\n\\t/* üëá The title prop is optional.\\n\\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n\\t * to learn how to generate automatic titles\\n\\t */\\n\\ttitle: \\\"Components/Modal\\\",\\n\\tcomponent: Modal,\\n} as ComponentMeta<typeof Modal>;\\n\\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\\nconst Template: ComponentStory<typeof Modal> = (args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n);\\n\\nexport const Full = Template.bind({});\\nFull.args = {\\n\\tshow: true,\\n\\tonClose: () => console.log(\\\"Îã´Í∏∞\\\"),\\n\\ttitle: \\\"FULL Î™®Îã¨ÏûÖÎãàÎã§\\\",\\n\\tsize: \\\"full\\\",\\n};\\n\\nexport const Mini = Template.bind({});\\nFull.args = {\\n\\tshow: true,\\n\\tonClose: () => console.log(\\\"Îã´Í∏∞\\\"),\\n\\ttitle: \\\"FULL Î™®Îã¨ÏûÖÎãàÎã§\\\",\\n\\tsize: \\\"full\\\",\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Full\":{\"startLoc\":{\"col\":47,\"line\":15},\"endLoc\":{\"col\":1,\"line\":17},\"startBody\":{\"col\":47,\"line\":15},\"endBody\":{\"col\":1,\"line\":17}},\"Mini\":{\"startLoc\":{\"col\":47,\"line\":15},\"endLoc\":{\"col\":1,\"line\":17},\"startBody\":{\"col\":47,\"line\":15},\"endBody\":{\"col\":1,\"line\":17}}};\n    \nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\n\nimport Modal from \".\";\n\nexport default {\n\t/* üëá The title prop is optional.\n\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n\t * to learn how to generate automatic titles\n\t */\n\ttitle: \"Components/Modal\",\n\tcomponent: Modal,\n} as ComponentMeta<typeof Modal>;\n\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\nconst Template: ComponentStory<typeof Modal> = (args) => (\n\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\n);\n\nexport const Full = Template.bind({});;\nFull.args = {\n\tshow: true,\n\tonClose: () => console.log(\"Îã´Í∏∞\"),\n\ttitle: \"FULL Î™®Îã¨ÏûÖÎãàÎã§\",\n\tsize: \"full\",\n};\n\nexport const Mini = Template.bind({});\nFull.args = {\n\tshow: true,\n\tonClose: () => console.log(\"Îã´Í∏∞\"),\n\ttitle: \"FULL Î™®Îã¨ÏûÖÎãàÎã§\",\n\tsize: \"full\",\n};\n\n\n\nFull.parameters = { storySource: { source: \"(args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n)\" }, ...Full.parameters };\nMini.parameters = { storySource: { source: \"(args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n)\" }, ...Mini.parameters };","import { defineProperties, createSprinkles } from \"@vanilla-extract/sprinkles\";\nimport { createGlobalTheme } from \"@vanilla-extract/css\";\n\n// color palette\n// #222831\n// #393E46\n// #00ADB5\n// #EEEEEE\n\nexport const vars = createGlobalTheme(\":root\", {\n\tcolors: {\n\t\ttext: {\n\t\t\tdefault: \"#EEEEEE\",\n\t\t\terror: \"red\",\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: \"#393E46\",\n\t\t\tdark: \"#222831\",\n\t\t\tlight: \"#EEEEEE\",\n\t\t\tmain: \"#00ADB5\",\n\t\t\tdimmed: \"rgba(0, 0, 0, 0.3)\",\n\t\t},\n\t},\n\tspace: {\n\t\tsmall: \"8px\",\n\t\tmedium: \"16px\",\n\t\tlarge: \"32px\",\n\t},\n\tzIndex: {\n\t\tauto: \"auto\",\n\t\t\"9999\": \"9999\",\n\t\t\"10000\": \"10000\",\n\t\t\"100\": \"100\",\n\t\t\"200\": \"200\",\n\t\t\"300\": \"300\",\n\t\t\"400\": \"400\",\n\t\t\"500\": \"500\",\n\t\t\"600\": \"600\",\n\t},\n});\n\nconst responsiveProperties = defineProperties({\n\tconditions: {\n\t\tmobile: {},\n\t\ttablet: { \"@media\": \"screen and (min-width: 768px)\" },\n\t\tdesktop: { \"@media\": \"screen and (min-width: 1024px)\" },\n\t},\n\tdefaultCondition: \"mobile\",\n\tproperties: {\n\t\tmaxWidth: [\"768px\"],\n\t\tdisplay: [\"none\", \"flex\", \"block\", \"inline\"],\n\t\tflexDirection: [\"row\", \"column\"],\n\t\tjustifyContent: [\n\t\t\t\"stretch\",\n\t\t\t\"flex-start\",\n\t\t\t\"center\",\n\t\t\t\"flex-end\",\n\t\t\t\"space-around\",\n\t\t\t\"space-between\",\n\t\t],\n\t\talignItems: [\"stretch\", \"flex-start\", \"center\", \"flex-end\"],\n\t\tpaddingTop: vars.space,\n\t\tpaddingBottom: vars.space,\n\t\tpaddingLeft: vars.space,\n\t\tpaddingRight: vars.space,\n\t\tzIndex: vars.zIndex,\n\t\t// etc.\n\t},\n\tshorthands: {\n\t\tpadding: [\"paddingTop\", \"paddingBottom\", \"paddingLeft\", \"paddingRight\"],\n\t\tpaddingX: [\"paddingLeft\", \"paddingRight\"],\n\t\tpaddingY: [\"paddingTop\", \"paddingBottom\"],\n\t\tplaceItems: [\"justifyContent\", \"alignItems\"],\n\t},\n});\n\nconst colorProperties = defineProperties({\n\tconditions: {\n\t\tlightMode: {},\n\t\tdarkMode: { \"@media\": \"(prefers-color-scheme: dark)\" },\n\t},\n\tdefaultCondition: \"lightMode\",\n\tproperties: {\n\t\tcolor: vars.colors.text,\n\t\tbackground: vars.colors.background,\n\t\t// etc.\n\t},\n});\n\nexport const sprinkles = createSprinkles(responsiveProperties, colorProperties);\n\n// It's a good idea to export the Sprinkles type too\nexport type Sprinkles = Parameters<typeof sprinkles>[0];\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AACA;AAAA;AADA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;;;;AASA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AALA;AADA;AAUA;AACA;AA/BA;AAgCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AANA;AADA;AAaA;AAAA;AAAA;AAfA;AACA;AAkBA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AADA;AASA;AAAA;AAAA;AAXA;AACA;AAcA;AAEA;AACA;AAFA;AACA;AAMA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AAAA;AACA;AAAA;AADA;AACA;AADA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AALA;AAaA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAnBA;AAgCA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AA3BA;AAmCA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAHA;AANA;AAaA;AACA;;;;;A","sourceRoot":""}