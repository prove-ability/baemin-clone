{"version":3,"file":"main.08bf69fd4981c8d509f2.hot-update.js","sources":["webpack:///./components/common/modal/modal.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\nimport { within, userEvent } from \\\"@storybook/testing-library\\\";\\n\\nimport Modal from \\\".\\\";\\n\\nexport default {\\n\\t/* üëá The title prop is optional.\\n\\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n\\t * to learn how to generate automatic titles\\n\\t */\\n\\ttitle: \\\"Components/Modal\\\",\\n\\tcomponent: Modal,\\n} as ComponentMeta<typeof Modal>;\\n\\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\\nconst Template: ComponentStory<typeof Modal> = (args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n);\\n\\nexport const FullModal = Template.bind({});\\nFullModal.args = {\\n\\tshow: true,\\n\\tonClose: () => console.log(\\\"Îã´Í∏∞\\\"),\\n\\ttitle: \\\"FULL Î™®Îã¨ÏûÖÎãàÎã§\\\",\\n\\tsize: \\\"full\\\",\\n};\\nFullModal.play = async ({ canvasElement }) => {\\n\\t// Starts querying the component from its root element\\n\\tconst canvas = within(canvasElement);\\n\\n\\tawait userEvent.type(canvas.getByTestId(\\\"email\\\"), \\\"email@provider.com\\\", {\\n\\t\\tdelay: 100,\\n\\t});\\n\\tawait userEvent.type(canvas.getByTestId(\\\"password\\\"), \\\"a-random-password\\\", {\\n\\t\\tdelay: 100,\\n\\t});\\n\\n\\t// See https://storybook.js.org/docs/react/essentials/actions#automatically-matching-args to learn how to setup logging in the Actions panel\\n\\tawait userEvent.click(canvas.getByRole(\\\"button\\\"));\\n};\\n\\nexport const MiniModal = Template.bind({});\\nMiniModal.args = {\\n\\tshow: true,\\n\\tonClose: () => console.log(\\\"Îã´Í∏∞\\\"),\\n\\ttitle: \\\"MINI Î™®Îã¨ÏûÖÎãàÎã§\\\",\\n\\tsize: \\\"mini\\\",\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"FullModal\":{\"startLoc\":{\"col\":47,\"line\":16},\"endLoc\":{\"col\":1,\"line\":18},\"startBody\":{\"col\":47,\"line\":16},\"endBody\":{\"col\":1,\"line\":18}},\"MiniModal\":{\"startLoc\":{\"col\":47,\"line\":16},\"endLoc\":{\"col\":1,\"line\":18},\"startBody\":{\"col\":47,\"line\":16},\"endBody\":{\"col\":1,\"line\":18}}};\n    \nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\nimport { within, userEvent } from \"@storybook/testing-library\";\n\nimport Modal from \".\";\n\nexport default {\n\t/* üëá The title prop is optional.\n\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n\t * to learn how to generate automatic titles\n\t */\n\ttitle: \"Components/Modal\",\n\tcomponent: Modal,\n} as ComponentMeta<typeof Modal>;\n\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\nconst Template: ComponentStory<typeof Modal> = (args) => (\n\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\n);\n\nexport const FullModal = Template.bind({});;\nFullModal.args = {\n\tshow: true,\n\tonClose: () => console.log(\"Îã´Í∏∞\"),\n\ttitle: \"FULL Î™®Îã¨ÏûÖÎãàÎã§\",\n\tsize: \"full\",\n};\nFullModal.play = async ({ canvasElement }) => {\n\t// Starts querying the component from its root element\n\tconst canvas = within(canvasElement);\n\n\tawait userEvent.type(canvas.getByTestId(\"email\"), \"email@provider.com\", {\n\t\tdelay: 100,\n\t});\n\tawait userEvent.type(canvas.getByTestId(\"password\"), \"a-random-password\", {\n\t\tdelay: 100,\n\t});\n\n\t// See https://storybook.js.org/docs/react/essentials/actions#automatically-matching-args to learn how to setup logging in the Actions panel\n\tawait userEvent.click(canvas.getByRole(\"button\"));\n};\n\nexport const MiniModal = Template.bind({});\nMiniModal.args = {\n\tshow: true,\n\tonClose: () => console.log(\"Îã´Í∏∞\"),\n\ttitle: \"MINI Î™®Îã¨ÏûÖÎãàÎã§\",\n\tsize: \"mini\",\n};\n\n\n\nFullModal.parameters = { storySource: { source: \"(args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n)\" }, ...FullModal.parameters };\nMiniModal.parameters = { storySource: { source: \"(args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n)\" }, ...MiniModal.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AAAA;AACA;AAAA;AADA;AACA;AADA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAQA;AADA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}