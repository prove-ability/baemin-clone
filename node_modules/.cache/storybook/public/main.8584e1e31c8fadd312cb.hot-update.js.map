{"version":3,"file":"main.8584e1e31c8fadd312cb.hot-update.js","sources":["webpack:///./components/common/modal/index.tsx","webpack:///./components/common/modal/modal.stories.mdx","webpack:///./components/common/modal/modal.stories.tsx"],"sourcesContent":["import * as styles from \"./modal.css\";\nimport { useEffect } from \"react\";\n\ninterface Props {\n\tshow: boolean;\n\tonClose: () => void;\n\ttitle: string;\n\tsize: \"full\" | \"mini\";\n}\n\nconst Modal: React.FC<Props> = ({ show, onClose, children, title, size }) => {\n\tconst handleCloseClick = (e: React.MouseEvent<HTMLSpanElement>) => {\n\t\te.preventDefault();\n\t\tonClose();\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.body.style.overflow = \"hidden\";\n\t\treturn () => {\n\t\t\tdocument.body.style.overflow = \"unset\";\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className={styles.container({ show })}>\n\t\t\t<div className={styles.wrapper({ size })}>\n\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t<span>{title}</span>\n\t\t\t\t\t<span onClick={handleCloseClick}>x</span>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.body}>{children}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nModal.displayName = \"Modal\";\nexport default Modal;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { Modal } from \".\";\nexport const Template = args => <Modal {...args} mdxType=\"Modal\" />;\n\nconst layoutProps = {\n  Template\n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"MDX/Modal\" component={Modal} mdxType=\"Meta\" />\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <p>{`We can drop it in a `}<inlineCode parentName=\"p\">{`Canvas`}</inlineCode>{` to get a code snippet:`}</p>\n    <Canvas mdxType=\"Canvas\">\n\t<Story name=\"negative\" args={{\n        status: \"negative\",\n        label: \"Negative\"\n      }} mdxType=\"Story\">\n\t\t{Template.bind({})}\n\t</Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const negative = Template.bind({});\nnegative.storyName = 'negative';\nnegative.args = {\n  status: \"negative\",\n  label: \"Negative\"\n};\nnegative.parameters = { storySource: { source: 'args => <Modal {...args} />' } };\n\nconst componentMeta = { title: 'MDX/Modal', component: Modal, includeStories: [\"negative\"],  };\n\nconst mdxStoryNameToKey = {\"negative\":\"negative\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\n\\nimport Modal from \\\".\\\";\\n\\nexport default {\\n\\t/* üëá The title prop is optional.\\n\\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n\\t * to learn how to generate automatic titles\\n\\t */\\n\\ttitle: \\\"Components/Modal\\\",\\n\\tcomponent: Modal,\\n\\targs: {\\n\\t\\ttitle: \\\"Ï†úÎ™© ÏûÖÎãàÎã§\\\",\\n\\t},\\n} as ComponentMeta<typeof Modal>;\\n\\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\\nconst Template: ComponentStory<typeof Modal> = (args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n);\\n\\nexport const FullModal = Template.bind({});\\nFullModal.args = {\\n\\tshow: true,\\n\\tonClose: () => console.log(\\\"Îã´Í∏∞\\\"),\\n\\tsize: \\\"full\\\",\\n};\\n// FullModal.play = async ({ canvasElement }) => {};\\n\\nexport const MiniModal = Template.bind({});\\nMiniModal.args = {\\n\\t...FullModal.args,\\n\\tsize: \\\"mini\\\",\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"FullModal\":{\"startLoc\":{\"col\":47,\"line\":18},\"endLoc\":{\"col\":1,\"line\":20},\"startBody\":{\"col\":47,\"line\":18},\"endBody\":{\"col\":1,\"line\":20}},\"MiniModal\":{\"startLoc\":{\"col\":47,\"line\":18},\"endLoc\":{\"col\":1,\"line\":20},\"startBody\":{\"col\":47,\"line\":18},\"endBody\":{\"col\":1,\"line\":20}}};\n    \nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\n\nimport Modal from \".\";\n\nexport default {\n\t/* üëá The title prop is optional.\n\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n\t * to learn how to generate automatic titles\n\t */\n\ttitle: \"Components/Modal\",\n\tcomponent: Modal,\n\targs: {\n\t\ttitle: \"Ï†úÎ™© ÏûÖÎãàÎã§\",\n\t},\n} as ComponentMeta<typeof Modal>;\n\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\nconst Template: ComponentStory<typeof Modal> = (args) => (\n\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\n);\n\nexport const FullModal = Template.bind({});;\nFullModal.args = {\n\tshow: true,\n\tonClose: () => console.log(\"Îã´Í∏∞\"),\n\tsize: \"full\",\n};\n// FullModal.play = async ({ canvasElement }) => {};\n\nexport const MiniModal = Template.bind({});\nMiniModal.args = {\n\t...FullModal.args,\n\tsize: \"mini\",\n};\n\n\n\nFullModal.parameters = { storySource: { source: \"(args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n)\" }, ...FullModal.parameters };\nMiniModal.parameters = { storySource: { source: \"(args) => (\\n\\t<Modal {...args}>MODAL ÏûÖÎãàÎã§</Modal>\\n)\" }, ...MiniModal.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AALA;AADA;AAUA;AACA;AAzBA;AA0BA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAQA;AACA;AAvBA;AAwBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AACA;AAYA;AAAA;AACA;AAAA;AADA;AACA;AADA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AACA;AAMA;AACA;AAEA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}