{"version":3,"file":"main.6697885e928df7239073.hot-update.js","sources":["webpack:///./components/common/modal/modal.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\n// import { within, userEvent } from \\\"@storybook/testing-library\\\";\\n\\nimport Modal from \\\".\\\";\\n\\nexport default {\\n\\t/* 👇 The title prop is optional.\\n\\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n\\t * to learn how to generate automatic titles\\n\\t */\\n\\ttitle: \\\"Components/Modal\\\",\\n\\tcomponent: Modal,\\n\\targs: {\\n\\t\\ttitle: \\\"MODAL 입니다\\\",\\n\\t},\\n} as ComponentMeta<typeof Modal>;\\n\\n//👇 We create a “template” of how args map to rendering\\nconst Template: ComponentStory<typeof Modal> = (args) => (\\n\\t<Modal {...args}>MODAL 입니다</Modal>\\n);\\n\\nexport const FullModal = Template.bind({});\\nFullModal.args = {\\n\\tshow: true,\\n\\tonClose: () => console.log(\\\"닫기\\\"),\\n\\ttitle: \\\"FULL 모달입니다\\\",\\n\\tsize: \\\"full\\\",\\n};\\n// FullModal.play = async ({ canvasElement }) => {};\\n\\nexport const MiniModal = Template.bind({});\\nMiniModal.args = {\\n\\tshow: true,\\n\\tonClose: () => console.log(\\\"닫기\\\"),\\n\\ttitle: \\\"MINI 모달입니다\\\",\\n\\tsize: \\\"mini\\\",\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"FullModal\":{\"startLoc\":{\"col\":47,\"line\":19},\"endLoc\":{\"col\":1,\"line\":21},\"startBody\":{\"col\":47,\"line\":19},\"endBody\":{\"col\":1,\"line\":21}},\"MiniModal\":{\"startLoc\":{\"col\":47,\"line\":19},\"endLoc\":{\"col\":1,\"line\":21},\"startBody\":{\"col\":47,\"line\":19},\"endBody\":{\"col\":1,\"line\":21}}};\n    \nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\n// import { within, userEvent } from \"@storybook/testing-library\";\n\nimport Modal from \".\";\n\nexport default {\n\t/* 👇 The title prop is optional.\n\t * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n\t * to learn how to generate automatic titles\n\t */\n\ttitle: \"Components/Modal\",\n\tcomponent: Modal,\n\targs: {\n\t\ttitle: \"MODAL 입니다\",\n\t},\n} as ComponentMeta<typeof Modal>;\n\n//👇 We create a “template” of how args map to rendering\nconst Template: ComponentStory<typeof Modal> = (args) => (\n\t<Modal {...args}>MODAL 입니다</Modal>\n);\n\nexport const FullModal = Template.bind({});;\nFullModal.args = {\n\tshow: true,\n\tonClose: () => console.log(\"닫기\"),\n\ttitle: \"FULL 모달입니다\",\n\tsize: \"full\",\n};\n// FullModal.play = async ({ canvasElement }) => {};\n\nexport const MiniModal = Template.bind({});\nMiniModal.args = {\n\tshow: true,\n\tonClose: () => console.log(\"닫기\"),\n\ttitle: \"MINI 모달입니다\",\n\tsize: \"mini\",\n};\n\n\n\nFullModal.parameters = { storySource: { source: \"(args) => (\\n\\t<Modal {...args}>MODAL 입니다</Modal>\\n)\" }, ...FullModal.parameters };\nMiniModal.parameters = { storySource: { source: \"(args) => (\\n\\t<Modal {...args}>MODAL 입니다</Modal>\\n)\" }, ...MiniModal.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AACA;AAYA;AAAA;AACA;AAAA;AADA;AACA;AADA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AACA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}